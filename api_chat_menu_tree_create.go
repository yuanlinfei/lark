// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// CreateChatMenuTree 该接口用于向群组中添加群菜单。
//
// 注意事项:
// - 该接口是向群内追加菜单, 群内已存在的菜单不会被覆盖。
// - 接口调用成功后, 会返回当前群内所有群菜单。
// - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。
// - 机器人必须在群里。
// - 一个群内, 一级菜单最多有3个, 每个一级菜单最多有5个二级菜单。
// - 暂不支持在一级菜单中追加二级菜单。
// - 仅支持群模式为group的群组。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_tree/create
// new doc: https://open.feishu.cn/document/server-docs/group/chat-menu_tree/create
func (r *ChatService) CreateChatMenuTree(ctx context.Context, request *CreateChatMenuTreeReq, options ...MethodOptionFunc) (*CreateChatMenuTreeResp, *Response, error) {
	if r.cli.mock.mockChatCreateChatMenuTree != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] Chat#CreateChatMenuTree mock enable")
		return r.cli.mock.mockChatCreateChatMenuTree(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Chat",
		API:                   "CreateChatMenuTree",
		Method:                "POST",
		URL:                   r.cli.openBaseURL + "/open-apis/im/v1/chats/:chat_id/menu_tree",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(createChatMenuTreeResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockChatCreateChatMenuTree mock ChatCreateChatMenuTree method
func (r *Mock) MockChatCreateChatMenuTree(f func(ctx context.Context, request *CreateChatMenuTreeReq, options ...MethodOptionFunc) (*CreateChatMenuTreeResp, *Response, error)) {
	r.mockChatCreateChatMenuTree = f
}

// UnMockChatCreateChatMenuTree un-mock ChatCreateChatMenuTree method
func (r *Mock) UnMockChatCreateChatMenuTree() {
	r.mockChatCreateChatMenuTree = nil
}

// CreateChatMenuTreeReq ...
type CreateChatMenuTreeReq struct {
	ChatID   string                         `path:"chat_id" json:"-"`    // 群ID, 详情参见[群ID 说明](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-id-description), 注意: 仅支持群模式为`group`的群ID, 示例值: "oc_a0553eda9014c201e6969b478895c230"
	MenuTree *CreateChatMenuTreeReqMenuTree `json:"menu_tree,omitempty"` // 要向群内追加的菜单
}

// CreateChatMenuTreeReqMenuTree ...
type CreateChatMenuTreeReqMenuTree struct {
	ChatMenuTopLevels []*CreateChatMenuTreeReqMenuTreeChatMenuTopLevel `json:"chat_menu_top_levels,omitempty"` // 一级菜单列表
}

// CreateChatMenuTreeReqMenuTreeChatMenuTopLevel ...
type CreateChatMenuTreeReqMenuTreeChatMenuTopLevel struct {
	ChatMenuItem *CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChatMenuItem `json:"chat_menu_item,omitempty"` // 一级菜单信息
	Children     []*CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChildren   `json:"children,omitempty"`       // 二级菜单列表
}

// CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChatMenuItem ...
type CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChatMenuItem struct {
	ActionType   string                                                                 `json:"action_type,omitempty"`   // 菜单类型, 注意, 如果一级菜单有二级菜单时, 则此一级菜单的值必须为NONE, 示例值: "NONE", 可选值有: NONE: 无类型, REDIRECT_LINK: 跳转链接类型
	RedirectLink *CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChatMenuItemRedirectLink `json:"redirect_link,omitempty"` // 跳转链接
	ImageKey     *string                                                                `json:"image_key,omitempty"`     // 图片的key值。通过 [上传图片](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/image/create) 接口上传message类型图片获取image_key, 注意, 如果一级菜单有二级菜单, 则此一级菜单不能有图标, 示例值: "img_v2_b0fbe905-7988-4282-b882-82edd010336j"
	Name         string                                                                 `json:"name,omitempty"`          // 菜单名称, 注意, 一级、二级菜单名称字符数要在1到120范围内, 示例值: "群聊"
	I18nNames    *I18nNames                                                             `json:"i18n_names,omitempty"`    // 菜单国际化名称, 注意, 一级、二级菜单名称字符数要在1到120范围内
}

// CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChatMenuItemRedirectLink ...
type CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChatMenuItemRedirectLink struct {
	CommonURL  *string `json:"common_url,omitempty"`  // 公用跳转链接, 必须以http开头, 示例值: "https://open.feishu.cn/"
	IosURL     *string `json:"ios_url,omitempty"`     // IOS端跳转链接, 当该字段不设置时, IOS端会使用common_url。必须以http开头, 示例值: "https://open.feishu.cn/"
	AndroidURL *string `json:"android_url,omitempty"` // Android端跳转链接, 当该字段不设置时, Android端会使用common_url。必须以http开头, 示例值: "https://open.feishu.cn/"
	PcURL      *string `json:"pc_url,omitempty"`      // PC端跳转链接, 当该字段不设置时, PC端会使用common_url。必须以http开头。在PC端点击群菜单后, 如果需要url对应的页面在飞书侧边栏展开, 可以在url前加上https://applink.feishu.cn/client/web_url/open?mode=sidebar-semi&url=, 比如https://applink.feishu.cn/client/web_url/open?mode=sidebar-semi&url=https://open.feishu.cn/, 示例值: "https://open.feishu.cn/"
	WebURL     *string `json:"web_url,omitempty"`     // Web端跳转链接, 当该字段不设置时, Web端会使用common_url。必须以http开头, 示例值: "https://open.feishu.cn/"
}

// CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChildren ...
type CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChildren struct {
	ChatMenuItem *CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChildrenChatMenuItem `json:"chat_menu_item,omitempty"` // 二级菜单信息
}

// CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChildrenChatMenuItem ...
type CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChildrenChatMenuItem struct {
	ActionType   *string                                                                        `json:"action_type,omitempty"`   // 菜单类型, 注意, 如果一级菜单有二级菜单时, 则此一级菜单的值必须为NONE, 示例值: "NONE", 可选值有: NONE: 无类型, REDIRECT_LINK: 跳转链接类型
	RedirectLink *CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChildrenChatMenuItemRedirectLink `json:"redirect_link,omitempty"` // 跳转链接
	ImageKey     *string                                                                        `json:"image_key,omitempty"`     // 图片的key值。通过 [上传图片](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/image/create) 接口上传message类型图片获取image_key, 注意, 如果一级菜单有二级菜单, 则此一级菜单不能有图标, 示例值: "img_v2_b0fbe905-7988-4282-b882-82edd010336j"
	Name         *string                                                                        `json:"name,omitempty"`          // 菜单名称, 注意, 一级、二级菜单名称字符数要在1到120范围内, 示例值: "群聊"
	I18nNames    *I18nNames                                                                     `json:"i18n_names,omitempty"`    // 菜单国际化名称, 注意, 一级、二级菜单名称字符数要在1到120范围内
}

// CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChildrenChatMenuItemRedirectLink ...
type CreateChatMenuTreeReqMenuTreeChatMenuTopLevelChildrenChatMenuItemRedirectLink struct {
	CommonURL  *string `json:"common_url,omitempty"`  // 公用跳转链接, 必须以http开头, 示例值: "https://open.feishu.cn/"
	IosURL     *string `json:"ios_url,omitempty"`     // IOS端跳转链接, 当该字段不设置时, IOS端会使用common_url。必须以http开头, 示例值: "https://open.feishu.cn/"
	AndroidURL *string `json:"android_url,omitempty"` // Android端跳转链接, 当该字段不设置时, Android端会使用common_url。必须以http开头, 示例值: "https://open.feishu.cn/"
	PcURL      *string `json:"pc_url,omitempty"`      // PC端跳转链接, 当该字段不设置时, PC端会使用common_url。必须以http开头。在PC端点击群菜单后, 如果需要url对应的页面在飞书侧边栏展开, 可以在url前加上https://applink.feishu.cn/client/web_url/open?mode=sidebar-semi&url=, 比如https://applink.feishu.cn/client/web_url/open?mode=sidebar-semi&url=https://open.feishu.cn/, 示例值: "https://open.feishu.cn/"
	WebURL     *string `json:"web_url,omitempty"`     // Web端跳转链接, 当该字段不设置时, Web端会使用common_url。必须以http开头, 示例值: "https://open.feishu.cn/"
}

// CreateChatMenuTreeResp ...
type CreateChatMenuTreeResp struct {
	MenuTree *CreateChatMenuTreeRespMenuTree `json:"menu_tree,omitempty"` // 追加后群内现有菜单
}

// CreateChatMenuTreeRespMenuTree ...
type CreateChatMenuTreeRespMenuTree struct {
	ChatMenuTopLevels []*CreateChatMenuTreeRespMenuTreeChatMenuTopLevel `json:"chat_menu_top_levels,omitempty"` // 一级菜单列表
}

// CreateChatMenuTreeRespMenuTreeChatMenuTopLevel ...
type CreateChatMenuTreeRespMenuTreeChatMenuTopLevel struct {
	ChatMenuTopLevelID string                                                      `json:"chat_menu_top_level_id,omitempty"` // 一级菜单ID
	ChatMenuItem       *CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChatMenuItem `json:"chat_menu_item,omitempty"`         // 一级菜单信息
	Children           []*CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChildren   `json:"children,omitempty"`               // 二级菜单列表
}

// CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChatMenuItem ...
type CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChatMenuItem struct {
	ActionType   string                                                                  `json:"action_type,omitempty"`   // 菜单类型, 注意, 如果一级菜单有二级菜单时, 则此一级菜单的值必须为NONE, 可选值有: NONE: 无类型, REDIRECT_LINK: 跳转链接类型
	RedirectLink *CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChatMenuItemRedirectLink `json:"redirect_link,omitempty"` // 跳转链接
	ImageKey     string                                                                  `json:"image_key,omitempty"`     // 图片的key值。通过 [上传图片](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/image/create) 接口上传message类型图片获取image_key, 注意, 如果一级菜单有二级菜单, 则此一级菜单不能有图标。
	Name         string                                                                  `json:"name,omitempty"`          // 菜单名称, 注意, 一级、二级菜单名称字符数要在1到120范围内
	I18nNames    *I18nNames                                                              `json:"i18n_names,omitempty"`    // 菜单国际化名称, 注意, 一级、二级菜单名称字符数要在1到120范围内
}

// CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChatMenuItemRedirectLink ...
type CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChatMenuItemRedirectLink struct {
	CommonURL  string `json:"common_url,omitempty"`  // 公用跳转链接, 必须以http开头。
	IosURL     string `json:"ios_url,omitempty"`     // IOS端跳转链接, 当该字段不设置时, IOS端会使用common_url。必须以http开头。
	AndroidURL string `json:"android_url,omitempty"` // Android端跳转链接, 当该字段不设置时, Android端会使用common_url。必须以http开头。
	PcURL      string `json:"pc_url,omitempty"`      // PC端跳转链接, 当该字段不设置时, PC端会使用common_url。必须以http开头。在PC端点击群菜单后, 如果需要url对应的页面在飞书侧边栏展开, 可以在url前加上https://applink.feishu.cn/client/web_url/open?mode=sidebar-semi&url=, 比如https://applink.feishu.cn/client/web_url/open?mode=sidebar-semi&url=https://open.feishu.cn/
	WebURL     string `json:"web_url,omitempty"`     // Web端跳转链接, 当该字段不设置时, Web端会使用common_url。必须以http开头。
}

// CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChildren ...
type CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChildren struct {
	ChatMenuSecondLevelID string                                                              `json:"chat_menu_second_level_id,omitempty"` // 二级菜单ID
	ChatMenuItem          *CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChildrenChatMenuItem `json:"chat_menu_item,omitempty"`            // 二级菜单信息
}

// CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChildrenChatMenuItem ...
type CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChildrenChatMenuItem struct {
	ActionType   string                                                                          `json:"action_type,omitempty"`   // 菜单类型, 注意, 如果一级菜单有二级菜单时, 则此一级菜单的值必须为NONE, 可选值有: NONE: 无类型, REDIRECT_LINK: 跳转链接类型
	RedirectLink *CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChildrenChatMenuItemRedirectLink `json:"redirect_link,omitempty"` // 跳转链接
	ImageKey     string                                                                          `json:"image_key,omitempty"`     // 图片的key值。通过 [上传图片](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/image/create) 接口上传message类型图片获取image_key, 注意, 如果一级菜单有二级菜单, 则此一级菜单不能有图标。
	Name         string                                                                          `json:"name,omitempty"`          // 菜单名称, 注意, 一级、二级菜单名称字符数要在1到120范围内
	I18nNames    *I18nNames                                                                      `json:"i18n_names,omitempty"`    // 菜单国际化名称, 注意, 一级、二级菜单名称字符数要在1到120范围内
}

// CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChildrenChatMenuItemRedirectLink ...
type CreateChatMenuTreeRespMenuTreeChatMenuTopLevelChildrenChatMenuItemRedirectLink struct {
	CommonURL  string `json:"common_url,omitempty"`  // 公用跳转链接, 必须以http开头。
	IosURL     string `json:"ios_url,omitempty"`     // IOS端跳转链接, 当该字段不设置时, IOS端会使用common_url。必须以http开头。
	AndroidURL string `json:"android_url,omitempty"` // Android端跳转链接, 当该字段不设置时, Android端会使用common_url。必须以http开头。
	PcURL      string `json:"pc_url,omitempty"`      // PC端跳转链接, 当该字段不设置时, PC端会使用common_url。必须以http开头。在PC端点击群菜单后, 如果需要url对应的页面在飞书侧边栏展开, 可以在url前加上https://applink.feishu.cn/client/web_url/open?mode=sidebar-semi&url=, 比如https://applink.feishu.cn/client/web_url/open?mode=sidebar-semi&url=https://open.feishu.cn/
	WebURL     string `json:"web_url,omitempty"`     // Web端跳转链接, 当该字段不设置时, Web端会使用common_url。必须以http开头。
}

// createChatMenuTreeResp ...
type createChatMenuTreeResp struct {
	Code  int64                   `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                  `json:"msg,omitempty"`  // 错误描述
	Data  *CreateChatMenuTreeResp `json:"data,omitempty"`
	Error *ErrorDetail            `json:"error,omitempty"`
}
