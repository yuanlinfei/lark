// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// GetContactJobTitle 该接口可以获取单个职务的信息。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/job_title/get
func (r *ContactService) GetContactJobTitle(ctx context.Context, request *GetContactJobTitleReq, options ...MethodOptionFunc) (*GetContactJobTitleResp, *Response, error) {
	if r.cli.mock.mockContactGetContactJobTitle != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Contact#GetContactJobTitle mock enable")
		return r.cli.mock.mockContactGetContactJobTitle(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Contact",
		API:                   "GetContactJobTitle",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/contact/v3/job_titles/:job_title_id",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedUserAccessToken:   true,
	}
	resp := new(getContactJobTitleResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockContactGetContactJobTitle mock ContactGetContactJobTitle method
func (r *Mock) MockContactGetContactJobTitle(f func(ctx context.Context, request *GetContactJobTitleReq, options ...MethodOptionFunc) (*GetContactJobTitleResp, *Response, error)) {
	r.mockContactGetContactJobTitle = f
}

// UnMockContactGetContactJobTitle un-mock ContactGetContactJobTitle method
func (r *Mock) UnMockContactGetContactJobTitle() {
	r.mockContactGetContactJobTitle = nil
}

// GetContactJobTitleReq ...
type GetContactJobTitleReq struct {
	JobTitleID string `path:"job_title_id" json:"-"` // 职务ID, 示例值: "dd39369b19b9"
}

// GetContactJobTitleResp ...
type GetContactJobTitleResp struct {
	JobTitle *GetContactJobTitleRespJobTitle `json:"job_title,omitempty"` // 职务信息
}

// GetContactJobTitleRespJobTitle ...
type GetContactJobTitleRespJobTitle struct {
	JobTitleID string                                    `json:"job_title_id,omitempty"` // 职务ID
	Name       string                                    `json:"name,omitempty"`         // 职务名称。1-100字符, 支持中、英文及符号
	I18nName   []*GetContactJobTitleRespJobTitleI18nName `json:"i18n_name,omitempty"`    // 多语言职务名称
	Status     bool                                      `json:"status,omitempty"`       // 是否启用
}

// GetContactJobTitleRespJobTitleI18nName ...
type GetContactJobTitleRespJobTitleI18nName struct {
	Locale string `json:"locale,omitempty"` // 语言
	Value  string `json:"value,omitempty"`  // 多语言内容
}

// getContactJobTitleResp ...
type getContactJobTitleResp struct {
	Code int64                   `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg  string                  `json:"msg,omitempty"`  // 错误描述
	Data *GetContactJobTitleResp `json:"data,omitempty"`
}
