// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// SearchCoreHRBank 根据银行 ID 、银行名称查询银行信息
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-bank/search
func (r *CoreHRService) SearchCoreHRBank(ctx context.Context, request *SearchCoreHRBankReq, options ...MethodOptionFunc) (*SearchCoreHRBankResp, *Response, error) {
	if r.cli.mock.mockCoreHRSearchCoreHRBank != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] CoreHR#SearchCoreHRBank mock enable")
		return r.cli.mock.mockCoreHRSearchCoreHRBank(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "CoreHR",
		API:                   "SearchCoreHRBank",
		Method:                "POST",
		URL:                   r.cli.openBaseURL + "/open-apis/corehr/v2/basic_info/banks/search",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(searchCoreHRBankResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockCoreHRSearchCoreHRBank mock CoreHRSearchCoreHRBank method
func (r *Mock) MockCoreHRSearchCoreHRBank(f func(ctx context.Context, request *SearchCoreHRBankReq, options ...MethodOptionFunc) (*SearchCoreHRBankResp, *Response, error)) {
	r.mockCoreHRSearchCoreHRBank = f
}

// UnMockCoreHRSearchCoreHRBank un-mock CoreHRSearchCoreHRBank method
func (r *Mock) UnMockCoreHRSearchCoreHRBank() {
	r.mockCoreHRSearchCoreHRBank = nil
}

// SearchCoreHRBankReq ...
type SearchCoreHRBankReq struct {
	PageSize     int64    `query:"page_size" json:"-"`      // 分页大小, 最大 100, 示例值: 100, 取值范围: `1` ～ `100`
	PageToken    *string  `query:"page_token" json:"-"`     // 分页标记, 第一次请求不填, 表示从头开始遍历；分页查询结果还有更多项时会同时返回新的 page_token, 下次遍历可采用该 page_token 获取查询结果, 示例值: 6891251722631890445
	BankIDList   []string `json:"bank_id_list,omitempty"`   // 银行 ID 列表, 与「银行名称列表」查询条件至少填写一项, 示例值: ["6891251722631891445"], 最大长度: `100`
	BankNameList []string `json:"bank_name_list,omitempty"` // 银行名称列表, 支持对银行名称精确搜索, 示例值: ["招商银行"], 最大长度: `100`
	StatusList   []int64  `json:"status_list,omitempty"`    // 状态列表, 示例值: [1], 可选值有: 1: 生效, 0: 失效, 默认值: `[1]`, 最大长度: `2`
}

// SearchCoreHRBankResp ...
type SearchCoreHRBankResp struct {
	Items     []*SearchCoreHRBankRespItem `json:"items,omitempty"`      // 查询的银行信息
	PageToken string                      `json:"page_token,omitempty"` // 分页标记, 当 has_more 为 true 时, 会同时返回新的 page_token, 否则不返回 page_token
	HasMore   bool                        `json:"has_more,omitempty"`   // 是否还有更多项
}

// SearchCoreHRBankRespItem ...
type SearchCoreHRBankRespItem struct {
	BankID          string                              `json:"bank_id,omitempty"`           // 银行 ID
	BankName        []*SearchCoreHRBankRespItemBankName `json:"bank_name,omitempty"`         // 银行名称
	BankCode        string                              `json:"bank_code,omitempty"`         // 总行代码
	CountryRegionID string                              `json:"country_region_id,omitempty"` // 国家 / 地区 ID, 可通过[查询国家 / 地区信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search) 接口查询
	Status          int64                               `json:"status,omitempty"`            // 状态, 可选值有: 1: 生效, 0: 失效
}

// SearchCoreHRBankRespItemBankName ...
type SearchCoreHRBankRespItemBankName struct {
	Lang  string `json:"lang,omitempty"`  // 语言
	Value string `json:"value,omitempty"` // 内容
}

// searchCoreHRBankResp ...
type searchCoreHRBankResp struct {
	Code  int64                 `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                `json:"msg,omitempty"`  // 错误描述
	Data  *SearchCoreHRBankResp `json:"data,omitempty"`
	Error *ErrorDetail          `json:"error,omitempty"`
}
