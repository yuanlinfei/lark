// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// DeleteCoreHRCompany 删除公司。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/company/delete
// new doc: https://open.feishu.cn/document/server-docs/corehr-v1/organization-management/company/delete
func (r *CoreHRService) DeleteCoreHRCompany(ctx context.Context, request *DeleteCoreHRCompanyReq, options ...MethodOptionFunc) (*DeleteCoreHRCompanyResp, *Response, error) {
	if r.cli.mock.mockCoreHRDeleteCoreHRCompany != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] CoreHR#DeleteCoreHRCompany mock enable")
		return r.cli.mock.mockCoreHRDeleteCoreHRCompany(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "CoreHR",
		API:                   "DeleteCoreHRCompany",
		Method:                "DELETE",
		URL:                   r.cli.openBaseURL + "/open-apis/corehr/v1/companies/:company_id",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(deleteCoreHRCompanyResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockCoreHRDeleteCoreHRCompany mock CoreHRDeleteCoreHRCompany method
func (r *Mock) MockCoreHRDeleteCoreHRCompany(f func(ctx context.Context, request *DeleteCoreHRCompanyReq, options ...MethodOptionFunc) (*DeleteCoreHRCompanyResp, *Response, error)) {
	r.mockCoreHRDeleteCoreHRCompany = f
}

// UnMockCoreHRDeleteCoreHRCompany un-mock CoreHRDeleteCoreHRCompany method
func (r *Mock) UnMockCoreHRDeleteCoreHRCompany() {
	r.mockCoreHRDeleteCoreHRCompany = nil
}

// DeleteCoreHRCompanyReq ...
type DeleteCoreHRCompanyReq struct {
	CompanyID string `path:"company_id" json:"-"` // 需要删除的公司ID, 示例值: "341432424"
}

// DeleteCoreHRCompanyResp ...
type DeleteCoreHRCompanyResp struct {
}

// deleteCoreHRCompanyResp ...
type deleteCoreHRCompanyResp struct {
	Code  int64                    `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                   `json:"msg,omitempty"`  // 错误描述
	Data  *DeleteCoreHRCompanyResp `json:"data,omitempty"`
	Error *ErrorDetail             `json:"error,omitempty"`
}
