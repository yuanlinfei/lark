// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// GetCoreHRJobDataList 批量查询人员的任职信息。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_data/list
// new doc: https://open.feishu.cn/document/server-docs/corehr-v1/employee/job_data/list
func (r *CoreHRService) GetCoreHRJobDataList(ctx context.Context, request *GetCoreHRJobDataListReq, options ...MethodOptionFunc) (*GetCoreHRJobDataListResp, *Response, error) {
	if r.cli.mock.mockCoreHRGetCoreHRJobDataList != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] CoreHR#GetCoreHRJobDataList mock enable")
		return r.cli.mock.mockCoreHRGetCoreHRJobDataList(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "CoreHR",
		API:                   "GetCoreHRJobDataList",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/corehr/v1/job_datas",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(getCoreHRJobDataListResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockCoreHRGetCoreHRJobDataList mock CoreHRGetCoreHRJobDataList method
func (r *Mock) MockCoreHRGetCoreHRJobDataList(f func(ctx context.Context, request *GetCoreHRJobDataListReq, options ...MethodOptionFunc) (*GetCoreHRJobDataListResp, *Response, error)) {
	r.mockCoreHRGetCoreHRJobDataList = f
}

// UnMockCoreHRGetCoreHRJobDataList un-mock CoreHRGetCoreHRJobDataList method
func (r *Mock) UnMockCoreHRGetCoreHRJobDataList() {
	r.mockCoreHRGetCoreHRJobDataList = nil
}

// GetCoreHRJobDataListReq ...
type GetCoreHRJobDataListReq struct {
	PageToken        *string           `query:"page_token" json:"-"`         // 分页标记, 第一次请求不填, 表示从头开始遍历；分页查询结果还有更多项时会同时返回新的 page_token, 下次遍历可采用该 page_token 获取查询结果, 示例值: 6994718879515739656
	PageSize         int64             `query:"page_size" json:"-"`          // 分页大小, 示例值: 100
	EmploymentID     *string           `query:"employment_id" json:"-"`      // 雇佣 ID, 示例值: 7072306364927985196
	JobDataIDList    []string          `query:"job_data_id_list" json:"-"`   // 任职信息 ID 列表, 最大 100 个（不传则默认查询全部任职信息）, 示例值: 6919733291281024526, 最大长度: `100`
	DepartmentID     *string           `query:"department_id" json:"-"`      // 部门 ID, 示例值: 6887868781834536462
	JobID            *string           `query:"job_id" json:"-"`             // 职务 ID, 示例值: 6893014062142064135
	GetAllVersion    *bool             `query:"get_all_version" json:"-"`    // 是否获取所有任职记录, true 为获取员工所有版本的任职记录, false 为仅获取当前生效的任职记录, 默认为 false, 示例值: false
	UserIDType       *IDType           `query:"user_id_type" json:"-"`       // 用户 ID 类型, 示例值: people_corehr_id, 可选值有: open_id: 标识一个用户在某个应用中的身份。同一个用户在不同应用中的 Open ID 不同。[了解更多: 如何获取 Open ID](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-openid), union_id: 标识一个用户在某个应用开发商下的身份。同一用户在同一开发商下的应用中的 Union ID 是相同的, 在不同开发商下的应用中的 Union ID 是不同的。通过 Union ID, 应用开发商可以把同个用户在多个应用中的身份关联起来。[了解更多: 如何获取 Union ID？](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-union-id), user_id: 标识一个用户在某个租户内的身份。同一个用户在租户 A 和租户 B 内的 User ID 是不同的。在同一个租户内, 一个用户的 User ID 在所有应用（包括商店应用）中都保持一致。User ID 主要用于在不同的应用间打通用户数据。[了解更多: 如何获取 User ID？](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-user-id), people_corehr_id: 以飞书人事的 ID 来识别用户, 默认值: `people_corehr_id`, 当值为 `user_id`, 字段权限要求: 获取用户 user ID
	DepartmentIDType *DepartmentIDType `query:"department_id_type" json:"-"` // 此次调用中使用的部门 ID 类型, 示例值: open_department_id, 可选值有: open_department_id: 以 open_department_id 来标识部门, department_id: 以 department_id 来标识部门, people_corehr_department_id: 以 people_corehr_department_id 来标识部门, 默认值: `people_corehr_department_id`
}

// GetCoreHRJobDataListResp ...
type GetCoreHRJobDataListResp struct {
	Items     []*GetCoreHRJobDataListRespItem `json:"items,omitempty"`      // 查询的任职信息
	HasMore   bool                            `json:"has_more,omitempty"`   // 是否还有更多项
	PageToken string                          `json:"page_token,omitempty"` // 分页标记, 当 has_more 为 true 时, 会同时返回新的 page_token, 否则不返回 page_token
}

// GetCoreHRJobDataListRespItem ...
type GetCoreHRJobDataListRespItem struct {
	ID                       string                                             `json:"id,omitempty"`                          // 任职信息 ID
	VersionID                string                                             `json:"version_id,omitempty"`                  // 任职记录版本 ID
	JobLevelID               string                                             `json:"job_level_id,omitempty"`                // 职务级别 ID, 枚举值及详细信息可通过[查询单个职级](https://open.feishu.cn/document/server-docs/corehr-v1/job-management/job_level/get)接口查询获得
	EmployeeTypeID           string                                             `json:"employee_type_id,omitempty"`            // 人员类型 ID, 枚举值及详细信息可通过[查询单个人员类型](https://open.feishu.cn/document/server-docs/corehr-v1/basic-infomation/employee_type/get)接口查询获得
	WorkingHoursTypeID       string                                             `json:"working_hours_type_id,omitempty"`       // 工时制度 ID, 枚举值及详细信息可通过[查询单个工时制度](https://open.feishu.cn/document/server-docs/corehr-v1/basic-infomation/working_hours_type/get)接口查询获得
	WorkLocationID           string                                             `json:"work_location_id,omitempty"`            // 工作地点 ID, 枚举值及详细信息可通过[查询单个地点](https://open.feishu.cn/document/server-docs/corehr-v1/organization-management/location/get)接口查询获得
	DepartmentID             string                                             `json:"department_id,omitempty"`               // 部门 ID, 枚举值及详细信息可通过[查询单个部门](https://open.feishu.cn/document/server-docs/corehr-v1/organization-management/department/get)接口查询获得
	JobID                    string                                             `json:"job_id,omitempty"`                      // 职务 ID, 枚举值及详细信息可通过[查询单个职务](https://open.feishu.cn/document/server-docs/corehr-v1/job-management/job/get)接口查询获得
	ProbationStartDate       string                                             `json:"probation_start_date,omitempty"`        // 试用期开始日期
	ProbationEndDate         string                                             `json:"probation_end_date,omitempty"`          // 试用期结束日期（实际结束日期）
	PrimaryJobData           bool                                               `json:"primary_job_data,omitempty"`            // 是否为主任职
	EmploymentID             string                                             `json:"employment_id,omitempty"`               // 雇佣 ID
	EffectiveTime            string                                             `json:"effective_time,omitempty"`              // 生效时间
	ExpirationTime           string                                             `json:"expiration_time,omitempty"`             // 失效时间
	JobFamilyID              string                                             `json:"job_family_id,omitempty"`               // 序列 ID, 枚举值及详细信息可通过[查询单个序列](https://open.feishu.cn/document/server-docs/corehr-v1/job-management/job_family/get)接口查询获得
	AssignmentStartReason    *GetCoreHRJobDataListRespItemAssignmentStartReason `json:"assignment_start_reason,omitempty"`     // 任职原因, 枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)任职原因（assignment_start_reason）枚举定义部分获得
	ProbationExpectedEndDate string                                             `json:"probation_expected_end_date,omitempty"` // 预计试用期结束日期
	ProbationOutcome         *GetCoreHRJobDataListRespItemProbationOutcome      `json:"probation_outcome,omitempty"`           // 试用期结果, 枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)试用期结果（probation_outcome）枚举定义部分获得
	WeeklyWorkingHours       int64                                              `json:"weekly_working_hours,omitempty"`        // 周工作时长
	DirectManagerID          string                                             `json:"direct_manager_id,omitempty"`           // 实线主管的任职记录ID
	DottedLineManagerIDList  []string                                           `json:"dotted_line_manager_id_list,omitempty"` // 虚线主管的任职记录ID
	SecondDirectManagerID    string                                             `json:"second_direct_manager_id,omitempty"`    // 第二实线主管的任职记录ID
	CostCenterRate           []*GetCoreHRJobDataListRespItemCostCenterRate      `json:"cost_center_rate,omitempty"`            // 成本中心分摊信息
	CustomFields             []*GetCoreHRJobDataListRespItemCustomField         `json:"custom_fields,omitempty"`               // 自定义字段
}

// GetCoreHRJobDataListRespItemAssignmentStartReason ...
type GetCoreHRJobDataListRespItemAssignmentStartReason struct {
	EnumName string                                                      `json:"enum_name,omitempty"` // 枚举值
	Display  []*GetCoreHRJobDataListRespItemAssignmentStartReasonDisplay `json:"display,omitempty"`   // 枚举多语展示
}

// GetCoreHRJobDataListRespItemAssignmentStartReasonDisplay ...
type GetCoreHRJobDataListRespItemAssignmentStartReasonDisplay struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHRJobDataListRespItemCostCenterRate ...
type GetCoreHRJobDataListRespItemCostCenterRate struct {
	CostCenterID string `json:"cost_center_id,omitempty"` // 支持的成本中心id
	Rate         int64  `json:"rate,omitempty"`           // 分摊比例
}

// GetCoreHRJobDataListRespItemCustomField ...
type GetCoreHRJobDataListRespItemCustomField struct {
	FieldName string `json:"field_name,omitempty"` // 字段名
	Value     string `json:"value,omitempty"`      // 字段值, 是json转义后的字符串, 根据元数据定义不同, 字段格式不同(如123, 123.23, "true", [\"id1\", \"id2\"], "2006-01-02 15:04:05")
}

// GetCoreHRJobDataListRespItemProbationOutcome ...
type GetCoreHRJobDataListRespItemProbationOutcome struct {
	EnumName string                                                 `json:"enum_name,omitempty"` // 枚举值
	Display  []*GetCoreHRJobDataListRespItemProbationOutcomeDisplay `json:"display,omitempty"`   // 枚举多语展示
}

// GetCoreHRJobDataListRespItemProbationOutcomeDisplay ...
type GetCoreHRJobDataListRespItemProbationOutcomeDisplay struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// getCoreHRJobDataListResp ...
type getCoreHRJobDataListResp struct {
	Code  int64                     `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                    `json:"msg,omitempty"`  // 错误描述
	Data  *GetCoreHRJobDataListResp `json:"data,omitempty"`
	Error *ErrorDetail              `json:"error,omitempty"`
}
