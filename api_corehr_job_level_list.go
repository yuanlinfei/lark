// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// GetCoreHRJobLevelList 批量查询职级。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_level/list
// new doc: https://open.feishu.cn/document/server-docs/corehr-v1/job-management/job_level/list
func (r *CoreHRService) GetCoreHRJobLevelList(ctx context.Context, request *GetCoreHRJobLevelListReq, options ...MethodOptionFunc) (*GetCoreHRJobLevelListResp, *Response, error) {
	if r.cli.mock.mockCoreHRGetCoreHRJobLevelList != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] CoreHR#GetCoreHRJobLevelList mock enable")
		return r.cli.mock.mockCoreHRGetCoreHRJobLevelList(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "CoreHR",
		API:                   "GetCoreHRJobLevelList",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/corehr/v1/job_levels",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(getCoreHRJobLevelListResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockCoreHRGetCoreHRJobLevelList mock CoreHRGetCoreHRJobLevelList method
func (r *Mock) MockCoreHRGetCoreHRJobLevelList(f func(ctx context.Context, request *GetCoreHRJobLevelListReq, options ...MethodOptionFunc) (*GetCoreHRJobLevelListResp, *Response, error)) {
	r.mockCoreHRGetCoreHRJobLevelList = f
}

// UnMockCoreHRGetCoreHRJobLevelList un-mock CoreHRGetCoreHRJobLevelList method
func (r *Mock) UnMockCoreHRGetCoreHRJobLevelList() {
	r.mockCoreHRGetCoreHRJobLevelList = nil
}

// GetCoreHRJobLevelListReq ...
type GetCoreHRJobLevelListReq struct {
	PageToken *string `query:"page_token" json:"-"` // 分页标记, 第一次请求不填, 表示从头开始遍历；分页查询结果还有更多项时会同时返回新的 page_token, 下次遍历可采用该 page_token 获取查询结果, 示例值: 1231231987
	PageSize  int64   `query:"page_size" json:"-"`  // 分页大小, 示例值: 100
}

// GetCoreHRJobLevelListResp ...
type GetCoreHRJobLevelListResp struct {
	Items     []*GetCoreHRJobLevelListRespItem `json:"items,omitempty"`      // 查询的职级信息
	HasMore   bool                             `json:"has_more,omitempty"`   // 是否还有更多项
	PageToken string                           `json:"page_token,omitempty"` // 分页标记, 当 has_more 为 true 时, 会同时返回新的 page_token, 否则不返回 page_token
}

// GetCoreHRJobLevelListRespItem ...
type GetCoreHRJobLevelListRespItem struct {
	ID           string                                      `json:"id,omitempty"`            // 职级 ID
	LevelOrder   int64                                       `json:"level_order,omitempty"`   // 职级数值
	Code         string                                      `json:"code,omitempty"`          // 编码
	Name         []*GetCoreHRJobLevelListRespItemName        `json:"name,omitempty"`          // 名称
	Description  []*GetCoreHRJobLevelListRespItemDescription `json:"description,omitempty"`   // 描述
	Active       bool                                        `json:"active,omitempty"`        // 是否启用
	CustomFields []*GetCoreHRJobLevelListRespItemCustomField `json:"custom_fields,omitempty"` // 自定义字段
}

// GetCoreHRJobLevelListRespItemCustomField ...
type GetCoreHRJobLevelListRespItemCustomField struct {
	FieldName string `json:"field_name,omitempty"` // 字段名
	Value     string `json:"value,omitempty"`      // 字段值, 是json转义后的字符串, 根据元数据定义不同, 字段格式不同(如123, 123.23, "true", [\"id1\", \"id2\"], "2006-01-02 15:04:05")
}

// GetCoreHRJobLevelListRespItemDescription ...
type GetCoreHRJobLevelListRespItemDescription struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// GetCoreHRJobLevelListRespItemName ...
type GetCoreHRJobLevelListRespItemName struct {
	Lang  string `json:"lang,omitempty"`  // 名称信息的语言
	Value string `json:"value,omitempty"` // 名称信息的内容
}

// getCoreHRJobLevelListResp ...
type getCoreHRJobLevelListResp struct {
	Code  int64                      `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                     `json:"msg,omitempty"`  // 错误描述
	Data  *GetCoreHRJobLevelListResp `json:"data,omitempty"`
	Error *ErrorDetail               `json:"error,omitempty"`
}
