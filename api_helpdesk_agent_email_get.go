// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// GetHelpdeskAgentEmail 该接口用于获取客服邮箱地址。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent/agent_email
// new doc: https://open.feishu.cn/document/server-docs/helpdesk-v1/agent-function/agent/agent_email
func (r *HelpdeskService) GetHelpdeskAgentEmail(ctx context.Context, request *GetHelpdeskAgentEmailReq, options ...MethodOptionFunc) (*GetHelpdeskAgentEmailResp, *Response, error) {
	if r.cli.mock.mockHelpdeskGetHelpdeskAgentEmail != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] Helpdesk#GetHelpdeskAgentEmail mock enable")
		return r.cli.mock.mockHelpdeskGetHelpdeskAgentEmail(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Helpdesk",
		API:                   "GetHelpdeskAgentEmail",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/helpdesk/v1/agent_emails",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedHelpdeskAuth:      true,
	}
	resp := new(getHelpdeskAgentEmailResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockHelpdeskGetHelpdeskAgentEmail mock HelpdeskGetHelpdeskAgentEmail method
func (r *Mock) MockHelpdeskGetHelpdeskAgentEmail(f func(ctx context.Context, request *GetHelpdeskAgentEmailReq, options ...MethodOptionFunc) (*GetHelpdeskAgentEmailResp, *Response, error)) {
	r.mockHelpdeskGetHelpdeskAgentEmail = f
}

// UnMockHelpdeskGetHelpdeskAgentEmail un-mock HelpdeskGetHelpdeskAgentEmail method
func (r *Mock) UnMockHelpdeskGetHelpdeskAgentEmail() {
	r.mockHelpdeskGetHelpdeskAgentEmail = nil
}

// GetHelpdeskAgentEmailReq ...
type GetHelpdeskAgentEmailReq struct {
}

// GetHelpdeskAgentEmailResp ...
type GetHelpdeskAgentEmailResp struct {
	Agents string `json:"agents,omitempty"` // agent emails
}

// getHelpdeskAgentEmailResp ...
type getHelpdeskAgentEmailResp struct {
	Code  int64                      `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                     `json:"msg,omitempty"`  // 错误描述
	Data  *GetHelpdeskAgentEmailResp `json:"data,omitempty"`
	Error *ErrorDetail               `json:"error,omitempty"`
}
