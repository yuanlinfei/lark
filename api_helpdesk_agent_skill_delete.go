// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// DeleteHelpdeskAgentSkill 该接口用于删除客服技能。
//
// 注意事项:
// user_access_token 访问, 需要操作者是当前服务台的管理员或所有者
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/delete
// new doc: https://open.feishu.cn/document/server-docs/helpdesk-v1/agent-function/agent_skill/delete
func (r *HelpdeskService) DeleteHelpdeskAgentSkill(ctx context.Context, request *DeleteHelpdeskAgentSkillReq, options ...MethodOptionFunc) (*DeleteHelpdeskAgentSkillResp, *Response, error) {
	if r.cli.mock.mockHelpdeskDeleteHelpdeskAgentSkill != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] Helpdesk#DeleteHelpdeskAgentSkill mock enable")
		return r.cli.mock.mockHelpdeskDeleteHelpdeskAgentSkill(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:               "Helpdesk",
		API:                 "DeleteHelpdeskAgentSkill",
		Method:              "DELETE",
		URL:                 r.cli.openBaseURL + "/open-apis/helpdesk/v1/agent_skills/:agent_skill_id",
		Body:                request,
		MethodOption:        newMethodOption(options),
		NeedUserAccessToken: true,
		NeedHelpdeskAuth:    true,
	}
	resp := new(deleteHelpdeskAgentSkillResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockHelpdeskDeleteHelpdeskAgentSkill mock HelpdeskDeleteHelpdeskAgentSkill method
func (r *Mock) MockHelpdeskDeleteHelpdeskAgentSkill(f func(ctx context.Context, request *DeleteHelpdeskAgentSkillReq, options ...MethodOptionFunc) (*DeleteHelpdeskAgentSkillResp, *Response, error)) {
	r.mockHelpdeskDeleteHelpdeskAgentSkill = f
}

// UnMockHelpdeskDeleteHelpdeskAgentSkill un-mock HelpdeskDeleteHelpdeskAgentSkill method
func (r *Mock) UnMockHelpdeskDeleteHelpdeskAgentSkill() {
	r.mockHelpdeskDeleteHelpdeskAgentSkill = nil
}

// DeleteHelpdeskAgentSkillReq ...
type DeleteHelpdeskAgentSkillReq struct {
	AgentSkillID string `path:"agent_skill_id" json:"-"` // agent group id, 示例值: "test-skill-id"
}

// DeleteHelpdeskAgentSkillResp ...
type DeleteHelpdeskAgentSkillResp struct {
}

// deleteHelpdeskAgentSkillResp ...
type deleteHelpdeskAgentSkillResp struct {
	Code  int64                         `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                        `json:"msg,omitempty"`  // 错误描述
	Data  *DeleteHelpdeskAgentSkillResp `json:"data,omitempty"`
	Error *ErrorDetail                  `json:"error,omitempty"`
}
