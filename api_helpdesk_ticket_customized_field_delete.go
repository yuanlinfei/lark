// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// DeleteHelpdeskTicketCustomizedField 该接口用于删除工单自定义字段。
//
// 注意事项:
// user_access_token 访问, 需要操作者是当前服务台的管理员或所有者
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/delete
// new doc: https://open.feishu.cn/document/server-docs/helpdesk-v1/ticket-management/ticket_customized_field/delete
func (r *HelpdeskService) DeleteHelpdeskTicketCustomizedField(ctx context.Context, request *DeleteHelpdeskTicketCustomizedFieldReq, options ...MethodOptionFunc) (*DeleteHelpdeskTicketCustomizedFieldResp, *Response, error) {
	if r.cli.mock.mockHelpdeskDeleteHelpdeskTicketCustomizedField != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] Helpdesk#DeleteHelpdeskTicketCustomizedField mock enable")
		return r.cli.mock.mockHelpdeskDeleteHelpdeskTicketCustomizedField(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:               "Helpdesk",
		API:                 "DeleteHelpdeskTicketCustomizedField",
		Method:              "DELETE",
		URL:                 r.cli.openBaseURL + "/open-apis/helpdesk/v1/ticket_customized_fields/:ticket_customized_field_id",
		Body:                request,
		MethodOption:        newMethodOption(options),
		NeedUserAccessToken: true,
		NeedHelpdeskAuth:    true,
	}
	resp := new(deleteHelpdeskTicketCustomizedFieldResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockHelpdeskDeleteHelpdeskTicketCustomizedField mock HelpdeskDeleteHelpdeskTicketCustomizedField method
func (r *Mock) MockHelpdeskDeleteHelpdeskTicketCustomizedField(f func(ctx context.Context, request *DeleteHelpdeskTicketCustomizedFieldReq, options ...MethodOptionFunc) (*DeleteHelpdeskTicketCustomizedFieldResp, *Response, error)) {
	r.mockHelpdeskDeleteHelpdeskTicketCustomizedField = f
}

// UnMockHelpdeskDeleteHelpdeskTicketCustomizedField un-mock HelpdeskDeleteHelpdeskTicketCustomizedField method
func (r *Mock) UnMockHelpdeskDeleteHelpdeskTicketCustomizedField() {
	r.mockHelpdeskDeleteHelpdeskTicketCustomizedField = nil
}

// DeleteHelpdeskTicketCustomizedFieldReq ...
type DeleteHelpdeskTicketCustomizedFieldReq struct {
	TicketCustomizedFieldID string `path:"ticket_customized_field_id" json:"-"` // 工单自定义字段ID, 示例值: "6948728206392295444"
}

// DeleteHelpdeskTicketCustomizedFieldResp ...
type DeleteHelpdeskTicketCustomizedFieldResp struct {
}

// deleteHelpdeskTicketCustomizedFieldResp ...
type deleteHelpdeskTicketCustomizedFieldResp struct {
	Code  int64                                    `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                                   `json:"msg,omitempty"`  // 错误描述
	Data  *DeleteHelpdeskTicketCustomizedFieldResp `json:"data,omitempty"`
	Error *ErrorDetail                             `json:"error,omitempty"`
}
