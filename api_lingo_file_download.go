// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
	"io"
)

// DownloadLingoFile 通过 file_token 下载原图片。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/lingo-v1/file/download
func (r *LingoService) DownloadLingoFile(ctx context.Context, request *DownloadLingoFileReq, options ...MethodOptionFunc) (*DownloadLingoFileResp, *Response, error) {
	if r.cli.mock.mockLingoDownloadLingoFile != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] Lingo#DownloadLingoFile mock enable")
		return r.cli.mock.mockLingoDownloadLingoFile(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Lingo",
		API:                   "DownloadLingoFile",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/lingo/v1/files/:file_token/download",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedUserAccessToken:   true,
	}
	resp := new(downloadLingoFileResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockLingoDownloadLingoFile mock LingoDownloadLingoFile method
func (r *Mock) MockLingoDownloadLingoFile(f func(ctx context.Context, request *DownloadLingoFileReq, options ...MethodOptionFunc) (*DownloadLingoFileResp, *Response, error)) {
	r.mockLingoDownloadLingoFile = f
}

// UnMockLingoDownloadLingoFile un-mock LingoDownloadLingoFile method
func (r *Mock) UnMockLingoDownloadLingoFile() {
	r.mockLingoDownloadLingoFile = nil
}

// DownloadLingoFileReq ...
type DownloadLingoFileReq struct {
	FileToken string `path:"file_token" json:"-"` // 需要下载的文件 token, 示例值: "boxbcEcmKiD3***vgqWTpvdc7jc"
}

// downloadLingoFileResp ...
type downloadLingoFileResp struct {
	Code  int64                  `json:"code,omitempty"`
	Msg   string                 `json:"msg,omitempty"`
	Data  *DownloadLingoFileResp `json:"data,omitempty"`
	Error *ErrorDetail           `json:"error,omitempty"`
}

func (r *downloadLingoFileResp) SetReader(file io.Reader) {
	if r.Data == nil {
		r.Data = &DownloadLingoFileResp{}
	}
	r.Data.File = file
}

// DownloadLingoFileResp ...
type DownloadLingoFileResp struct {
	File io.Reader `json:"file,omitempty"`
}
