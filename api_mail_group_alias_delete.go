// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// DeleteMailGroupAlias 删除邮件组别名。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-alias/delete
// new doc: https://open.feishu.cn/document/server-docs/mail-v1/mail-group/mailgroup-alias/delete
func (r *MailService) DeleteMailGroupAlias(ctx context.Context, request *DeleteMailGroupAliasReq, options ...MethodOptionFunc) (*DeleteMailGroupAliasResp, *Response, error) {
	if r.cli.mock.mockMailDeleteMailGroupAlias != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] Mail#DeleteMailGroupAlias mock enable")
		return r.cli.mock.mockMailDeleteMailGroupAlias(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Mail",
		API:                   "DeleteMailGroupAlias",
		Method:                "DELETE",
		URL:                   r.cli.openBaseURL + "/open-apis/mail/v1/mailgroups/:mailgroup_id/aliases/:alias_id",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(deleteMailGroupAliasResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockMailDeleteMailGroupAlias mock MailDeleteMailGroupAlias method
func (r *Mock) MockMailDeleteMailGroupAlias(f func(ctx context.Context, request *DeleteMailGroupAliasReq, options ...MethodOptionFunc) (*DeleteMailGroupAliasResp, *Response, error)) {
	r.mockMailDeleteMailGroupAlias = f
}

// UnMockMailDeleteMailGroupAlias un-mock MailDeleteMailGroupAlias method
func (r *Mock) UnMockMailDeleteMailGroupAlias() {
	r.mockMailDeleteMailGroupAlias = nil
}

// DeleteMailGroupAliasReq ...
type DeleteMailGroupAliasReq struct {
	MailGroupID string `path:"mailgroup_id" json:"-"` // 邮件组id或邮件组邮箱地址, 示例值: "xxxxxx 或 test_group@xx.xxx"
	AliasID     string `path:"alias_id" json:"-"`     // 邮件组别名邮箱地址, 示例值: "xxx@xx.xxx"
}

// DeleteMailGroupAliasResp ...
type DeleteMailGroupAliasResp struct {
}

// deleteMailGroupAliasResp ...
type deleteMailGroupAliasResp struct {
	Code  int64                     `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                    `json:"msg,omitempty"`  // 错误描述
	Data  *DeleteMailGroupAliasResp `json:"data,omitempty"`
	Error *ErrorDetail              `json:"error,omitempty"`
}
