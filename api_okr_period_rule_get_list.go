// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// GetOKRPeriodRuleList 获取租户的周期规则列表。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/period_rule/list
// new doc: https://open.feishu.cn/document/server-docs/okr-v1/period_rule/list
func (r *OKRService) GetOKRPeriodRuleList(ctx context.Context, request *GetOKRPeriodRuleListReq, options ...MethodOptionFunc) (*GetOKRPeriodRuleListResp, *Response, error) {
	if r.cli.mock.mockOKRGetOKRPeriodRuleList != nil {
		r.cli.Log(ctx, LogLevelDebug, "[lark] OKR#GetOKRPeriodRuleList mock enable")
		return r.cli.mock.mockOKRGetOKRPeriodRuleList(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "OKR",
		API:                   "GetOKRPeriodRuleList",
		Method:                "GET",
		URL:                   r.cli.openBaseURL + "/open-apis/okr/v1/period_rules",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(getOKRPeriodRuleListResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockOKRGetOKRPeriodRuleList mock OKRGetOKRPeriodRuleList method
func (r *Mock) MockOKRGetOKRPeriodRuleList(f func(ctx context.Context, request *GetOKRPeriodRuleListReq, options ...MethodOptionFunc) (*GetOKRPeriodRuleListResp, *Response, error)) {
	r.mockOKRGetOKRPeriodRuleList = f
}

// UnMockOKRGetOKRPeriodRuleList un-mock OKRGetOKRPeriodRuleList method
func (r *Mock) UnMockOKRGetOKRPeriodRuleList() {
	r.mockOKRGetOKRPeriodRuleList = nil
}

// GetOKRPeriodRuleListReq ...
type GetOKRPeriodRuleListReq struct {
}

// GetOKRPeriodRuleListResp ...
type GetOKRPeriodRuleListResp struct {
	PeriodRules []*GetOKRPeriodRuleListRespPeriodRule `json:"period_rules,omitempty"` // 周期规则列表
}

// GetOKRPeriodRuleListRespPeriodRule ...
type GetOKRPeriodRuleListRespPeriodRule struct {
	PeriodRuleID string `json:"period_rule_id,omitempty"` // 周期规则ID
	Type         string `json:"type,omitempty"`           // 周期类型, year: 年度周期, month: 月度周期
	Length       int64  `json:"length,omitempty"`         // 周期长度（月)
	FirstMonth   int64  `json:"first_month,omitempty"`    // 每年首个开始月份
}

// getOKRPeriodRuleListResp ...
type getOKRPeriodRuleListResp struct {
	Code  int64                     `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg   string                    `json:"msg,omitempty"`  // 错误描述
	Data  *GetOKRPeriodRuleListResp `json:"data,omitempty"`
	Error *ErrorDetail              `json:"error,omitempty"`
}
