// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// DeleteVCRoom 该接口可以用来删除某个会议室。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/delete
// new doc: https://open.feishu.cn/document/server-docs/vc-v1/room/delete
func (r *VCService) DeleteVCRoom(ctx context.Context, request *DeleteVCRoomReq, options ...MethodOptionFunc) (*DeleteVCRoomResp, *Response, error) {
	if r.cli.mock.mockVCDeleteVCRoom != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] VC#DeleteVCRoom mock enable")
		return r.cli.mock.mockVCDeleteVCRoom(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "VC",
		API:                   "DeleteVCRoom",
		Method:                "DELETE",
		URL:                   r.cli.openBaseURL + "/open-apis/vc/v1/rooms/:room_id",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedUserAccessToken:   true,
	}
	resp := new(deleteVCRoomResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockVCDeleteVCRoom mock VCDeleteVCRoom method
func (r *Mock) MockVCDeleteVCRoom(f func(ctx context.Context, request *DeleteVCRoomReq, options ...MethodOptionFunc) (*DeleteVCRoomResp, *Response, error)) {
	r.mockVCDeleteVCRoom = f
}

// UnMockVCDeleteVCRoom un-mock VCDeleteVCRoom method
func (r *Mock) UnMockVCDeleteVCRoom() {
	r.mockVCDeleteVCRoom = nil
}

// DeleteVCRoomReq ...
type DeleteVCRoomReq struct {
	RoomID string `path:"room_id" json:"-"` // 会议室ID, 示例值: "omm_4de32cf10a4358788ff4e09e37ebbf9b", 长度范围: `1` ～ `100` 字符
}

// DeleteVCRoomResp ...
type DeleteVCRoomResp struct {
}

// deleteVCRoomResp ...
type deleteVCRoomResp struct {
	Code int64             `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg  string            `json:"msg,omitempty"`  // 错误描述
	Data *DeleteVCRoomResp `json:"data,omitempty"`
}
